package com.app.dao;
import java.util.List;
import java.util.Random;

import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import com.app.pojos.User;

@Service
@Transactional
public class UserDaoImpl implements IUserDao {
	@Autowired
		SessionFactory sf;
	
	@Override
	public Integer registerUser(User user) {
		
		return (Integer) sf.getCurrentSession().save(user);
	}

	@Override
	public List<User> getAllUsers() {
		String jpql="select u from User u";
		return sf.getCurrentSession().createQuery(jpql,User.class).getResultList();
	}

	@Override
	public User login(User user) {
		String jpql="select u from User u where u.email=:email and u.password=:password";
		return sf.getCurrentSession().createQuery(jpql,User.class).setParameter("email",user.getEmail()).
				setParameter("password",user.getPassword()).getSingleResult();
	}

	@Override
	public User findByEmail(User user) {
		// TODO Auto-generated method stub
		String jpql="select u from User u where u.email=:email";
		return sf.getCurrentSession().createQuery(jpql,User.class).setParameter("email",user.getEmail()).
				getSingleResult();
		
	}

	@Override
	public int generateOtp() {
		// TODO Auto-generated method stub
		Random random = new Random();
		int num = random.nextInt(99999) + 99999;
		if (num < 100000 || num > 999999) 
		{
			num = random.nextInt(99999) + 99999;
			if (num < 100000 || num > 999999)
			{
				System.out.println("Unable to generate PIN at this time..");
			}
		}
		return num;
		
	}

}
